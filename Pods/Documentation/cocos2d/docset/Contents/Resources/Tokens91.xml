<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCLabelBMFont.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCLabelBMFont</TokenIdentifier>
			<Abstract type="html">CCLabelBMFont is a subclass of CCSpriteBatchNode</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>
			
			<NodeRef refid="91"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCLabelBMFont/purgeCachedData</TokenIdentifier>
			<Abstract type="html">Purges the cached data.
Removes from memory the cached configurations and the atlas name dictionary.</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>+ (void)purgeCachedData</Declaration>
			
			
			<Anchor>//api/name/purgeCachedData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/setAlignment:</TokenIdentifier>
			<Abstract type="html">alignment used for the label</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CCTextAlignment alignment</Declaration>
			
			
			<Anchor>//api/name/alignment</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCLabelBMFont/alignment</TokenIdentifier>
			<Abstract type="html">alignment used for the label</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CCTextAlignment alignment</Declaration>
			
			
			<Anchor>//api/name/alignment</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/setFntFile:</TokenIdentifier>
			<Abstract type="html">fntFile used for the font</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *fntFile</Declaration>
			
			
			<Anchor>//api/name/fntFile</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCLabelBMFont/fntFile</TokenIdentifier>
			<Abstract type="html">fntFile used for the font</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *fntFile</Declaration>
			
			
			<Anchor>//api/name/fntFile</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/setOpacity:</TokenIdentifier>
			<Abstract type="html">conforms to CCRGBAProtocol protocol</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) GLubyte opacity</Declaration>
			
			
			<Anchor>//api/name/opacity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCLabelBMFont/opacity</TokenIdentifier>
			<Abstract type="html">conforms to CCRGBAProtocol protocol</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) GLubyte opacity</Declaration>
			
			
			<Anchor>//api/name/opacity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/setColor:</TokenIdentifier>
			<Abstract type="html">conforms to CCRGBAProtocol protocol</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ccColor3B color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCLabelBMFont/color</TokenIdentifier>
			<Abstract type="html">conforms to CCRGBAProtocol protocol</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ccColor3B color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCLabelBMFont/labelWithString:fntFile:</TokenIdentifier>
			<Abstract type="html">creates a BMFont label with an initial string and the FNT file.</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>+ (id)labelWithString:(NSString *)string fntFile:(NSString *)fntFile</Declaration>
			
			
			<Anchor>//api/name/labelWithString:fntFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCLabelBMFont/labelWithString:fntFile:width:alignment:</TokenIdentifier>
			<Abstract type="html">creates a BMFont label with an initial string, the FNT file, width, and alignment option</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>+ (id)labelWithString:(NSString *)string fntFile:(NSString *)fntFile width:(float)width alignment:(CCTextAlignment)alignment</Declaration>
			
			
			<Anchor>//api/name/labelWithString:fntFile:width:alignment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCLabelBMFont/labelWithString:fntFile:width:alignment:imageOffset:</TokenIdentifier>
			<Abstract type="html">creates a BMFont label with an initial string, the FNT file, width, alignment option and the offset of where the glpyhs start on the .PNG image</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>+ (id)labelWithString:(NSString *)string fntFile:(NSString *)fntFile width:(float)width alignment:(CCTextAlignment)alignment imageOffset:(CGPoint)offset</Declaration>
			
			
			<Anchor>//api/name/labelWithString:fntFile:width:alignment:imageOffset:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/initWithString:fntFile:</TokenIdentifier>
			<Abstract type="html">init a BMFont label with an initial string and the FNT file</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>- (id)initWithString:(NSString *)string fntFile:(NSString *)fntFile</Declaration>
			
			
			<Anchor>//api/name/initWithString:fntFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/initWithString:fntFile:width:alignment:</TokenIdentifier>
			<Abstract type="html">init a BMFont label with an initial string and the FNT file, width, and alignment option</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>- (id)initWithString:(NSString *)string fntFile:(NSString *)fntFile width:(float)width alignment:(CCTextAlignment)alignment</Declaration>
			
			
			<Anchor>//api/name/initWithString:fntFile:width:alignment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/initWithString:fntFile:width:alignment:imageOffset:</TokenIdentifier>
			<Abstract type="html">init a BMFont label with an initial string and the FNT file, width, alignment option and the offset of where the glyphs start on the .PNG image</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>- (id)initWithString:(NSString *)string fntFile:(NSString *)fntFile width:(float)width alignment:(CCTextAlignment)alignment imageOffset:(CGPoint)offset</Declaration>
			
			
			<Anchor>//api/name/initWithString:fntFile:width:alignment:imageOffset:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/createFontChars</TokenIdentifier>
			<Abstract type="html">updates the font chars based on the string to render</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>- (void)createFontChars</Declaration>
			
			
			<Anchor>//api/name/createFontChars</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/setWidth:</TokenIdentifier>
			<Abstract type="html">set label width</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>- (void)setWidth:(float)width</Declaration>
			
			
			<Anchor>//api/name/setWidth:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCLabelBMFont/setAlignment:</TokenIdentifier>
			<Abstract type="html">set label alignment</Abstract>
			<DeclaredIn>CCLabelBMFont.h</DeclaredIn>			
			
			<Declaration>- (void)setAlignment:(CCTextAlignment)alignment</Declaration>
			
			
			<Anchor>//api/name/setAlignment:</Anchor>
		</Token>
		
	</File>
</Tokens>