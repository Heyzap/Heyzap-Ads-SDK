<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SimpleAudioEngine.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SimpleAudioEngine</TokenIdentifier>
			<Abstract type="html">A wrapper to the CDAudioManager object.
This is recommended for basic audio requirements. If you just want to play some sound fx
and some background music and have no interest in learning the lower level workings then
this is the interface to use.</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>
			
			<NodeRef refid="249"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/setBackgroundMusicVolume:</TokenIdentifier>
			<Abstract type="html">Background music volume. Range is 0.0f to 1.0f. This will only have an effect if willPlayBackgroundMusic returns YES</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>@property (readwrite) float backgroundMusicVolume</Declaration>
			
			
			<Anchor>//api/name/backgroundMusicVolume</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SimpleAudioEngine/backgroundMusicVolume</TokenIdentifier>
			<Abstract type="html">Background music volume. Range is 0.0f to 1.0f. This will only have an effect if willPlayBackgroundMusic returns YES</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>@property (readwrite) float backgroundMusicVolume</Declaration>
			
			
			<Anchor>//api/name/backgroundMusicVolume</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/setEffectsVolume:</TokenIdentifier>
			<Abstract type="html">Effects volume. Range is 0.0f to 1.0f</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>@property (readwrite) float effectsVolume</Declaration>
			
			
			<Anchor>//api/name/effectsVolume</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SimpleAudioEngine/effectsVolume</TokenIdentifier>
			<Abstract type="html">Effects volume. Range is 0.0f to 1.0f</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>@property (readwrite) float effectsVolume</Declaration>
			
			
			<Anchor>//api/name/effectsVolume</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/setWillPlayBackgroundMusic:</TokenIdentifier>
			<Abstract type="html">If NO it indicates background music will not be played either because no background music is loaded or the audio session does not permit it.</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL willPlayBackgroundMusic</Declaration>
			
			
			<Anchor>//api/name/willPlayBackgroundMusic</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SimpleAudioEngine/willPlayBackgroundMusic</TokenIdentifier>
			<Abstract type="html">If NO it indicates background music will not be played either because no background music is loaded or the audio session does not permit it.</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL willPlayBackgroundMusic</Declaration>
			
			
			<Anchor>//api/name/willPlayBackgroundMusic</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SimpleAudioEngine/sharedEngine</TokenIdentifier>
			<Abstract type="html">returns the shared instance of the SimpleAudioEngine object</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>+ (SimpleAudioEngine *)sharedEngine</Declaration>
			
			
			<Anchor>//api/name/sharedEngine</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/preloadBackgroundMusic:</TokenIdentifier>
			<Abstract type="html">Preloads a music file so it will be ready to play as background music</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)preloadBackgroundMusic:(NSString *)filePath</Declaration>
			
			
			<Anchor>//api/name/preloadBackgroundMusic:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/playBackgroundMusic:</TokenIdentifier>
			<Abstract type="html">plays background music in a loop</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)playBackgroundMusic:(NSString *)filePath</Declaration>
			
			
			<Anchor>//api/name/playBackgroundMusic:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/playBackgroundMusic:loop:</TokenIdentifier>
			<Abstract type="html">plays background music, if loop is true the music will repeat otherwise it will be played once</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)playBackgroundMusic:(NSString *)filePath loop:(BOOL)loop</Declaration>
			
			
			<Anchor>//api/name/playBackgroundMusic:loop:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/stopBackgroundMusic</TokenIdentifier>
			<Abstract type="html">stops playing background music</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)stopBackgroundMusic</Declaration>
			
			
			<Anchor>//api/name/stopBackgroundMusic</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/pauseBackgroundMusic</TokenIdentifier>
			<Abstract type="html">pauses the background music</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)pauseBackgroundMusic</Declaration>
			
			
			<Anchor>//api/name/pauseBackgroundMusic</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/resumeBackgroundMusic</TokenIdentifier>
			<Abstract type="html">resume background music that has been paused</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)resumeBackgroundMusic</Declaration>
			
			
			<Anchor>//api/name/resumeBackgroundMusic</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/rewindBackgroundMusic</TokenIdentifier>
			<Abstract type="html">rewind the background music</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)rewindBackgroundMusic</Declaration>
			
			
			<Anchor>//api/name/rewindBackgroundMusic</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/isBackgroundMusicPlaying</TokenIdentifier>
			<Abstract type="html">returns whether or not the background music is playing</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isBackgroundMusicPlaying</Declaration>
			
			
			<Anchor>//api/name/isBackgroundMusicPlaying</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/playEffect:</TokenIdentifier>
			<Abstract type="html">plays an audio effect with a file path</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (ALuint)playEffect:(NSString *)filePath</Declaration>
			
			
			<Anchor>//api/name/playEffect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/stopEffect:</TokenIdentifier>
			<Abstract type="html">stop a sound that is playing, note you must pass in the soundId that is returned when you started playing the sound with playEffect</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)stopEffect:(ALuint)soundId</Declaration>
			
			
			<Anchor>//api/name/stopEffect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/playEffect:pitch:pan:gain:</TokenIdentifier>
			<Abstract type="html">plays an audio effect with a file path, pitch, pan and gain</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (ALuint)playEffect:(NSString *)filePath pitch:(Float32)pitch pan:(Float32)pan gain:(Float32)gain</Declaration>
			
			
			<Anchor>//api/name/playEffect:pitch:pan:gain:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/preloadEffect:</TokenIdentifier>
			<Abstract type="html">preloads an audio effect</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)preloadEffect:(NSString *)filePath</Declaration>
			
			
			<Anchor>//api/name/preloadEffect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/unloadEffect:</TokenIdentifier>
			<Abstract type="html">unloads an audio effect from memory</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (void)unloadEffect:(NSString *)filePath</Declaration>
			
			
			<Anchor>//api/name/unloadEffect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleAudioEngine/soundSourceForFile:</TokenIdentifier>
			<Abstract type="html">Gets a CDSoundSource object set up to play the specified file.</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>- (CDSoundSource *)soundSourceForFile:(NSString *)filePath</Declaration>
			
			
			<Anchor>//api/name/soundSourceForFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SimpleAudioEngine/end</TokenIdentifier>
			<Abstract type="html">Shuts down the shared audio engine instance so that it can be reinitialised</Abstract>
			<DeclaredIn>SimpleAudioEngine.h</DeclaredIn>			
			
			<Declaration>+ (void)end</Declaration>
			
			
			<Anchor>//api/name/end</Anchor>
		</Token>
		
	</File>
</Tokens>