<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HeyzapSDK.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HeyzapSDK</TokenIdentifier>
			<Abstract type="html">HeyzapSDK is a singleton object which handles all the functionality of the Heyzap SDK.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/sharedSDK</TokenIdentifier>
			<Abstract type="html">Accessing the singleton HeyzapSDK</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (id)sharedSDK</Declaration>
			
			
			<Anchor>//api/name/sharedSDK</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/setAppId:</TokenIdentifier>
			<Abstract type="html">The App Store ID for your app. Instructions for getting this value: http://support.heyzap.com/entries/23201783-How-do-I-find-my-game-s-App-Store-ID- . If you haven&apos;t submitted your app to the store, see here: http://developers.heyzap.com/docs/iossdkadvanced</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *appId</Declaration>
			
			
			<Anchor>//api/name/appId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HeyzapSDK/appId</TokenIdentifier>
			<Abstract type="html">The App Store ID for your app. Instructions for getting this value: http://support.heyzap.com/entries/23201783-How-do-I-find-my-game-s-App-Store-ID- . If you haven&apos;t submitted your app to the store, see here: http://developers.heyzap.com/docs/iossdkadvanced</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *appId</Declaration>
			
			
			<Anchor>//api/name/appId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/setAppURL:</TokenIdentifier>
			<Abstract type="html">The URL the Heyzap SDK uses to return to your app. For information, see here: http://developers.heyzap.com/docs/iossdkadvanced</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSURL *appURL</Declaration>
			
			
			<Anchor>//api/name/appURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HeyzapSDK/appURL</TokenIdentifier>
			<Abstract type="html">The URL the Heyzap SDK uses to return to your app. For information, see here: http://developers.heyzap.com/docs/iossdkadvanced</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSURL *appURL</Declaration>
			
			
			<Anchor>//api/name/appURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/isSupported</TokenIdentifier>
			<Abstract type="html">Whether or not Heyzap supports the current version of iOS. Heyzap will run fine on iOS versions below 5.0, but will not show Leaderboards, Achievements, or Ads on those versions.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)isSupported</Declaration>
			
			<ReturnValue><Abstract type="html">YES if supported</Abstract></ReturnValue>
			<Anchor>//api/name/isSupported</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/setAppName:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (void)setAppName:(NSString *)passedAppName</Declaration>
			
			
			<Anchor>//api/name/setAppName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/startHeyzapWithAppId:andAppURL:andShowPopup:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (void)startHeyzapWithAppId:(NSString *)appId andAppURL:(NSURL *)url andShowPopup:(BOOL)showPopup</Declaration>
			
			
			<Anchor>//api/name/startHeyzapWithAppId:andAppURL:andShowPopup:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/startHeyzapWithAppId:andShowPopup:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (void)startHeyzapWithAppId:(NSString *)appId andShowPopup:(BOOL)showPopup</Declaration>
			
			
			<Anchor>//api/name/startHeyzapWithAppId:andShowPopup:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/startHeyzapWithAppId:andOptions:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (void)startHeyzapWithAppId:(NSString *)appId andOptions:(HZOptions)options</Declaration>
			
			
			<Anchor>//api/name/startHeyzapWithAppId:andOptions:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/startHeyzapWithAppId:andAppURL:andOptions:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (void)startHeyzapWithAppId:(NSString *)appId andAppURL:(NSURL *)url andOptions:(HZOptions)options</Declaration>
			
			
			<Anchor>//api/name/startHeyzapWithAppId:andAppURL:andOptions:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/getCheckinButtonWithLocation:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (HZCheckinButton *)getCheckinButtonWithLocation:(CGPoint)location</Declaration>
			
			
			<Anchor>//api/name/getCheckinButtonWithLocation:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/getCheckinButtonWithLocation:andMessage:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (HZCheckinButton *)getCheckinButtonWithLocation:(CGPoint)location andMessage:(NSString *)message</Declaration>
			
			
			<Anchor>//api/name/getCheckinButtonWithLocation:andMessage:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/setDebugLevel:</TokenIdentifier>
			<Abstract type="html">For development purposes, the Heyzap SDK will print helpful information. This method controls how much is logged. The default level is HZDebugLevelSilent.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)setDebugLevel:(HZDebugLevel)debugLevel</Declaration>
			<Parameters>
				<Parameter>
					<Name>debugLevel</Name>
					<Abstract type="html">The HZDebugLevel to use for print statements.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDebugLevel:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/checkin</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (IBAction)checkin</Declaration>
			
			
			<Anchor>//api/name/checkin</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/checkinWithMessage:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (IBAction)checkinWithMessage:(NSString *)message</Declaration>
			
			
			<Anchor>//api/name/checkinWithMessage:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/onStartLevel:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)onStartLevel:(void ( ^ ) ( NSString *))block</Declaration>
			
			
			<Anchor>//api/name/onStartLevel:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/submitScore:withCompletion:</TokenIdentifier>
			<Abstract type="html">Submit a new score to Heyzap. See the HZScore header for how to create an HZScore. If the score isn&apos;t a personal best, this method will show a small notification at the top of the screen. If the score is a personal best, shows a full leaderboard.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (IBAction)submitScore:(HZScore *)score withCompletion:(void ( ^ ) ( HZLeaderboardRank *rank , NSError *error ))completionBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>completionBlock</Name>
					<Abstract type="html">A block with following arguments:
   rank The HZLeaderboardRank describing the user&apos;s position on the leaderboard. You do not need to use this object.
   error If there was an error submitting the score, error describes the issue. Otherwise, nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/submitScore:withCompletion:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/openLeaderboardLevel:</TokenIdentifier>
			<Abstract type="html">Shows the leaderboard for the specified level ID</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (IBAction)openLeaderboardLevel:(NSString *)levelID</Declaration>
			<Parameters>
				<Parameter>
					<Name>levelID</Name>
					<Abstract type="html">The string for the level ID. You can find these values at https://developers.heyzap.com/dashboard</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/openLeaderboardLevel:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/openLeaderboard</TokenIdentifier>
			<Abstract type="html">Shows the leaderboard for the default level ID</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (IBAction)openLeaderboard</Declaration>
			
			
			<Anchor>//api/name/openLeaderboard</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/canParseURL:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)canParseURL:(NSURL *)url</Declaration>
			
			
			<Anchor>//api/name/canParseURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/HeyzapSDK/parseURL:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>+ (NSDictionary *)parseURL:(NSURL *)url</Declaration>
			
			
			<Anchor>//api/name/parseURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/unlockAchievementsWithIDs:completion:</TokenIdentifier>
			<Abstract type="html">Unlocks achievements and then displays a popup showing the achievements the user has unlocked. This method will only display UI if there are new achievements to show. Because this method displays UI over the screen, call it at e.g. the end of a level. To unlock achievements without interrupting gameplay, see silentlyUnlockAchievements:</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)unlockAchievementsWithIDs:(NSArray *)achievementIDs completion:(void ( ^ ) ( NSArray *achievements , NSError *error , BOOL *showPopup ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>achievementIDs</Name>
					<Abstract type="html">An array of achievement ID strings.
As a convenience, if you internally represent achievements as objects within your application, you can pass those objects. Just have them conform to the HeyzapAchievementProtocol. You can create achievements and find their achievement identifier at https://developers.heyzap.com/dashboard</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">A completion block with the following arguments:

   achievements An NSArray of HZAchievement model objects. You do not need to use these objects unless you wish to disable Heyzap&apos;s Achievement UI and create your own.

   error If the request sent to Heyzap was a success, this value will be nil. Otherwise, it will contain an NSError object describing the error.

   showPopup A reference to a Boolean value. The block can set this value to NO to not show the Achievement popup (if for example the user has already started a new game).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/unlockAchievementsWithIDs:completion:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/silentlyUnlockAchievements:</TokenIdentifier>
			<Abstract type="html">Stores achievement IDs in NSUserDefaults that should be unlocked on the next call of unlockAchievementsWithIDs:completion: without adding UI to the screen. Use this method to unlock an achievement without interrupting gameplay.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)silentlyUnlockAchievements:(NSArray *)achievementIDs</Declaration>
			<Parameters>
				<Parameter>
					<Name>achievementIDs</Name>
					<Abstract type="html">This parameter has the same semantics as in the unlockAchievementsWithIDs:completion:. It is safe to call this method multiple times with the same achievement and to pass duplicate achievements -- the UI displayed by unlockAchievementsWithIDs:completion: will always be accurate at displaying what achievements are new.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/silentlyUnlockAchievements:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/showAllAchievementsWithCompletion:</TokenIdentifier>
			<Abstract type="html">Shows all achievements for the game.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)showAllAchievementsWithCompletion:(void ( ^ ) ( NSArray *achievements , NSError *error , BOOL *showPopup ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">A completion block called after finishing a Heyzap network request. The block arguments are identical to those used in unlockAchievementsWithIDs:completion:.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/showAllAchievementsWithCompletion:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/enableAds</TokenIdentifier>
			<Abstract type="html">You must call this method, or enableAds:, before showing an ad. This method prefetches a Heyzap ad. You only need to call this method once.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)enableAds</Declaration>
			
			
			<Anchor>//api/name/enableAds</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/enableAds:</TokenIdentifier>
			<Abstract type="html">You must call this method, or enableAds, before showing an ad. This method prefetches a Heyzap ad. You only need to call this method once.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)enableAds:(id&lt;HZAdsDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">Pass an object conforming to the HZAdsDelegate protocol to receive ad-related callbacks.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableAds:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/setAdsDelegate:</TokenIdentifier>
			<Abstract type="html">Call this method to set a new delegate to respond to ad-related callbacks.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)setAdsDelegate:(id&lt;HZAdsDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">Pass an object conforming to the HZAdsDelegate protocol to receive ad-related callbacks.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setAdsDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/showAd</TokenIdentifier>
			<Abstract type="html">Shows a Heyzap Ad. If one has not been preloaded, this makes another request to prefetch an ad and returns immediately.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)showAd</Declaration>
			
			
			<Anchor>//api/name/showAd</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HeyzapSDK/showAd:</TokenIdentifier>
			<Abstract type="html">This method is equivalent to showAd, but you may pass a string describing the context of where the ad is shown. Heyzap does not currently support this feature on its Dashboard, but this string will be used to compare the effectiveness of ads depending on where they are shown within the app.</Abstract>
			<DeclaredIn>HeyzapSDK.h</DeclaredIn>			
			
			<Declaration>- (void)showAd:(NSString *)tag</Declaration>
			<Parameters>
				<Parameter>
					<Name>tag</Name>
					<Abstract type="html">A string describing where the ad is being shown, e.g. &quot;After Level 1&quot;</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/showAd:</Anchor>
		</Token>
		
	</File>
</Tokens>